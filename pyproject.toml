[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "adalove-extractor"
version = "3.0.0"
description = "Sistema modular de extração automatizada de cards educacionais da plataforma AdaLove"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Fernando Bertholdo", email = "fernando.bertholdo@example.com"}
]
keywords = ["adalove", "scraping", "education", "data-extraction"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "playwright>=1.49.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "flake8>=7.0.0",
]

[project.scripts]
adalove-extract = "adalove_extractor.cli.main:main"

[project.urls]
Homepage = "https://github.com/fernando-bertholdo/adalove_extract_cards_enhanced"
Documentation = "https://github.com/fernando-bertholdo/adalove_extract_cards_enhanced#readme"
Repository = "https://github.com/fernando-bertholdo/adalove_extract_cards_enhanced"
Issues = "https://github.com/fernando-bertholdo/adalove_extract_cards_enhanced/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["adalove_extractor*"]
exclude = ["tests*", "arquivos_antigos*"]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.venv
  | venv
  | arquivos_antigos
  | dados_extraidos
  | logs
)/
'''

[tool.isort]
profile = "black"
line_length = 100
skip_gitignore = true
extend_skip = ["venv", "arquivos_antigos", "dados_extraidos", "logs"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
check_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--cov=adalove_extractor",
    "--cov-report=term-missing",
    "--cov-report=html",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["adalove_extractor"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]








